{"version":3,"sources":["redux/hooks.ts","Api/MovieApi.ts","redux/movies.ts","Components/Content/Components/OuterElement/OuterStyles.ts","Components/Content/Components/OuterElement/OuterElement.tsx","Components/Content/Components/Inner/InnerStyles.js","Components/Content/Components/Inner/InnerElement.tsx","redux/favourites.ts","Components/Content/Components/Row/Card/CardStyle.ts","Components/Content/Components/Row/Card/useTilt.ts","redux/details.ts","Components/Content/Components/Row/Card/Image/ImageStyle.ts","Components/Content/Components/Row/Card/Image/Image.tsx","Components/Content/Components/Row/Card/Card.tsx","Components/Content/Components/Row/Loading/LoadingStyle.ts","Components/Content/Components/Row/Loading/Loading.tsx","Components/Content/Components/Row/Row.tsx","Components/Content/ContentGrid.tsx","Components/Content/Hooks/useResize.ts","Components/Content/Hooks/useDimensions.ts","Components/Content/Hooks/useVirtualiser.ts","Components/DetailsDialog/Components/Details/Components/CloseButton/CloseButtonStyle.js","Components/DetailsDialog/Components/Details/Components/CloseButton/CloseButton.tsx","Components/DetailsDialog/Components/Details/DetailsStyle.ts","Components/DetailsDialog/Components/Details/Components/Rating/RatingStyle.tsx","Components/DetailsDialog/Components/Details/Components/Rating/Rating.tsx","redux/genres.ts","Components/DetailsDialog/Components/Details/Components/Genres/GenreTag/GenreTag.tsx","Components/DetailsDialog/Components/Details/Components/Genres/Genres.tsx","Components/DetailsDialog/Components/Details/Components/Cast/CastTag/CastTag.tsx","Components/DetailsDialog/Components/Details/Components/Cast/useCast.ts","Components/DetailsDialog/Components/Details/Components/Cast/Cast.tsx","Components/DetailsDialog/Components/Details/Components/Image/ImageStyle.ts","Components/DetailsDialog/Components/Details/Components/Image/Image.tsx","Components/DetailsDialog/Components/Details/Details.tsx","Components/DetailsDialog/Components/Details/hooks/useDimensions.ts","Components/DetailsDialog/Components/Paper/PaperComponentStyle.js","Components/DetailsDialog/Components/Paper/PaperComponent.tsx","Components/DetailsDialog/DetailsDialog.tsx","Components/Error/ErrorStyle.ts","Components/Error/Error.tsx","Components/Favourites Panel/Components/FavouritesContent/Components/FavouriteStyle.ts","Components/Favourites Panel/Components/FavouritesContent/Components/Favourite.tsx","Components/Favourites Panel/Components/FavouritesContent/FavouritesContentStyle.js","Components/Favourites Panel/Components/FavouritesContent/FavouriteContent.tsx","Components/Favourites Panel/Components/FavouritesHeader/FavouritesHeaderStyle.js","Components/Favourites Panel/Components/FavouritesHeader/FavouritesHeader.tsx","Components/Favourites Panel/FavouritesPanelStyle.ts","Components/Favourites Panel/FavouritesPanel.tsx","Components/Header/HeaderStyle.ts","Components/Header/ModeSelect/ModeSelectStyle.ts","Components/Header/ModeSelect/ModeSelect.tsx","Components/Header/Search/SearchStyle.js","Components/Header/Search/Search.js","Components/Header/Header.tsx","hooks/useGenres.ts","App.tsx","redux/store.ts","Styles/theme.js","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","MovieApi","path","additionalParameters","parameters","api_key","Object","entries","map","join","get","a","url","buildUrl","fetch","res","status","error","json","body","console","log","fetchMovies","page","fetchGenreList","fetchCast","movieId","fetchSearch","query","fetchNowPlaying","fetchTopRated","fetchUpcoming","Mode","moviesAdapter","createEntityAdapter","loading","fetchId","initialState","finished","mode","Popular","movies","createSlice","name","getInitialState","reducers","addMovies","state","action","addMany","payload","setError","setFinished","clearMovies","removeAll","setMode","actions","getSelectors","selectMovieById","selectById","selectMovieIds","selectIds","dispatch","getState","localId","createLocalId","fetchMovieRouter","checkLocalId","results","length","Search","Upcoming","selectNewMode","q","Date","now","StyledOuter","styled","div","sidePanelOpen","OuterElement","forwardRef","ref","children","onScroll","favourites","open","StyledInner","InnerElement","props","favouritesAdapter","toggleOpen","addFavourite","addOne","removeFavourite","removeOne","selectFavouriteById","selectFavouriteIds","CardContainer","attrs","style","left","top","theme","primaryShadow","Title","Button","StarIcon","fontSize","favourite","primary","options","scale","speed","glare","max","details","id","position","setDetailsId","clearDetailsId","Image","img","SkeletonContainer","ImageComponent","src","useState","loaded","setLoaded","Skeleton","variant","width","height","alt","onLoad","Card","movie","tiltRef","tilt","useRef","useEffect","current","VanillaTilt","init","useTilt","onClick","rect","getBoundingClientRect","midHorizontal","midVertical","backdrop_path","title","e","stopPropagation","LoadingContainer","Progress","CircularProgress","Loading","size","thickness","memo","data","rowIndex","columnIndex","items","columns","areEqual","ContentGrid","movieIds","hasNextPage","resize","setResize","onResize","window","addEventListener","removeEventListener","useResize","dimensions","useMemo","colWidth","innerWidth","xPadding","sidePanelAdj","innerHeight","colCount","Math","floor","itemCount","rowCount","ceil","useDimensions","loadMoreItems","useCallback","isItemLoaded","index","customOnItemsRendered","infiniteOnItemsRendered","visibleColumnStartIndex","visibleColumnStopIndex","visibleRowStartIndex","visibleRowStopIndex","visibleStartIndex","visibleStopIndex","useVirtualiser","threshold","onItemsRendered","columnCount","columnWidth","rowHeight","outerElementType","innerElementType","itemData","Row","CloseIcon","CloseButton","DetailsContainer","RightContainer","Heading","Content","TagContainer","StyledTag","RatingContainer","RatingValue","RatingComponent","rating","hover","setHover","onPointerEnter","onPointerLeave","Rating","value","readOnly","precision","genresAdapter","genres","addGenres","selectGenreById","GenreTag","genreId","genre","Genres","CastTag","person","Cast","cast","setCast","result","slice","p","useCast","sx","bgcolor","Details","setDimensions","maxHeight","maxWidth","poster_path","moment","release_date","format","overview","vote_average","genre_ids","PaperContainer","Transition","detailsOrigin","Zoom","transformOrigin","timeout","DetailsDialog","Dialog","TransitionComponent","onClose","PaperComponent","ErrorContainer","Error","FavouriteContainer","li","RemoveButton","Favourite","favouriteId","titleRef","ContentContainer","FavouritesList","ul","FavouritesContent","favouriteIds","HeaderContainer","h2","FavouritesHeader","FavouritesPanelContainer","FavouritesPanel","header","FavButtonContainer","topShadow","bottomShadow","FavButton","SelectContainer","PopoverContents","StyledPopover","Popover","PaperProps","boxShadow","MenuItem","StyledDownArrow","ArrowDropDownIcon","StyledUpArrow","ArrowDropUpIcon","ModeSelect","searchActive","setOpen","anchor","newMode","target","innerHTML","anchorEl","anchorOrigin","vertical","horizontal","SearchBarContainer","active","Input","input","StyledSearchIcon","SearchIcon","StyledCancelIcon","ClearIcon","setSearchActive","searchText","setSearchText","requestSearch","debounce","cancel","onSearchTextChange","expanded","type","placeholder","onChange","autoComplete","onFocus","onBlur","Header","useGenres","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e05cebd.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { EntityId } from \"@reduxjs/toolkit\";\r\n\r\ninterface Result {\r\n  error?: boolean;\r\n  body?: any;\r\n}\r\n\r\nexport class MovieApi {\r\n  static get = async (path: string, parameters: {} = {}): Promise<Result> => {\r\n    const url = this.buildUrl(path, parameters);\r\n\r\n    try {\r\n      const res = await fetch(url);\r\n      if (res.status >= 400) return { error: true };\r\n      const body = await res.json();\r\n      return { body };\r\n    } catch (error) {\r\n      console.log(error);\r\n      return { error: true };\r\n    }\r\n  };\r\n  static buildUrl(path: string, additionalParameters: {}) {\r\n    const base = \"https://api.themoviedb.org/3/\";\r\n    const parameters = {\r\n      api_key: \"36834fcb2d57a8929754cdf5e16e62b5\",\r\n      ...additionalParameters,\r\n    };\r\n    return (\r\n      base +\r\n      path +\r\n      Object.entries(parameters)\r\n        .map((entries) => entries.join(\"=\"))\r\n        .join(\"&\")\r\n    );\r\n  }\r\n  static fetchMovies = (page: number) => {\r\n    const path = \"movie/popular?\";\r\n    const parameters = { page };\r\n    return this.get(path, parameters);\r\n  };\r\n\r\n  static fetchGenreList = () => {\r\n    const path = \"genre/movie/list?\";\r\n    return this.get(path);\r\n  };\r\n\r\n  static fetchCast = (movieId: EntityId) => {\r\n    const path = `movie/${movieId}/credits?`;\r\n    return this.get(path);\r\n  };\r\n  static fetchSearch = (query: string, page: number) => {\r\n    const path = `search/movie?`;\r\n    const parameters = { query, page };\r\n    return this.get(path, parameters);\r\n  };\r\n\r\n  static fetchNowPlaying = (page: number) => {\r\n    const path = \"movie/now_playing?\";\r\n    const parameters = { page };\r\n    return this.get(path, parameters);\r\n  };\r\n  static fetchTopRated = (page: number) => {\r\n    const path = \"movie/top_rated?\";\r\n    const parameters = { page };\r\n    return this.get(path, parameters);\r\n  };\r\n  static fetchUpcoming = (page: number) => {\r\n    const path = \"movie/upcoming?\";\r\n    const parameters = { page };\r\n    return this.get(path, parameters);\r\n  };\r\n}\r\n","import {\r\n  createSlice,\r\n  createEntityAdapter,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\nimport { MovieApi } from \"../Api/MovieApi\";\r\nimport type { AppThunk, RootState } from \"./store\";\r\n\r\ninterface MoviesState {\r\n  error: boolean;\r\n  finished: boolean;\r\n  mode: number;\r\n}\r\nexport interface Movie {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  genre_ids: number[];\r\n  title: string;\r\n  overview: string;\r\n  release_date: string;\r\n  vote_average: number;\r\n}\r\n\r\nconst moviesAdapter = createEntityAdapter<Movie>();\r\n\r\nexport enum Mode {\r\n  Popular,\r\n  Search,\r\n  \"Now Playing\",\r\n  \"Top Rated\",\r\n  Upcoming,\r\n}\r\n\r\nlet page = 1;\r\nlet loading = false;\r\nlet query = \"\";\r\nlet fetchId: number = 0;\r\n\r\nconst initialState: MoviesState = {\r\n  error: false,\r\n  finished: false,\r\n  mode: Mode.Popular,\r\n};\r\n\r\nconst movies = createSlice({\r\n  name: \"genres\",\r\n  initialState: moviesAdapter.getInitialState(initialState),\r\n  reducers: {\r\n    addMovies(state, action: PayloadAction<Movie[]>) {\r\n      moviesAdapter.addMany(state, action.payload);\r\n    },\r\n    setError(state) {\r\n      state.error = true;\r\n    },\r\n    setFinished(state) {\r\n      state.finished = true;\r\n    },\r\n    clearMovies(state) {\r\n      state.finished = false;\r\n      moviesAdapter.removeAll(state);\r\n    },\r\n    setMode(state, action: PayloadAction<number>) {\r\n      state.mode = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addMovies, setError, setFinished, clearMovies, setMode } =\r\n  movies.actions;\r\n\r\nexport const { selectById: selectMovieById, selectIds: selectMovieIds } =\r\n  moviesAdapter.getSelectors((state: RootState) => state.movies);\r\n\r\nexport default movies.reducer;\r\n\r\nexport const fetchMovies = (): AppThunk => async (dispatch, getState) => {\r\n  if (loading) return;\r\n  loading = true;\r\n  const localId = createLocalId();\r\n  const { body, error } = await fetchMovieRouter(getState().movies.mode);\r\n  if (!checkLocalId(localId)) return;\r\n  loading = false;\r\n  if (error) return dispatch(setError());\r\n\r\n  page++;\r\n  const movies = body.results;\r\n  if (!movies || movies.length < 20) dispatch(setFinished());\r\n\r\n  if (movies) dispatch(addMovies(movies));\r\n};\r\n\r\nconst fetchMovieRouter = async (mode: number) => {\r\n  switch (mode) {\r\n    case Mode.Popular:\r\n      return await MovieApi.fetchMovies(page);\r\n    case Mode.Search:\r\n      return await MovieApi.fetchSearch(query, page);\r\n    case Mode[\"Now Playing\"]:\r\n      return await MovieApi.fetchNowPlaying(page);\r\n    case Mode[\"Top Rated\"]:\r\n      return await MovieApi.fetchTopRated(page);\r\n    case Mode.Upcoming:\r\n      return await MovieApi.fetchUpcoming(page);\r\n    default:\r\n      return { error: true };\r\n  }\r\n};\r\n\r\nexport const selectNewMode =\r\n  (mode: number, q: string = \"\"): AppThunk =>\r\n  async (dispatch) => {\r\n    page = 1;\r\n    loading = false;\r\n    query = q;\r\n\r\n    dispatch(setMode(mode));\r\n    dispatch(clearMovies());\r\n    dispatch(fetchMovies());\r\n  };\r\n\r\nconst createLocalId = () => {\r\n  const localId = Date.now();\r\n  fetchId = localId;\r\n  return localId;\r\n};\r\nconst checkLocalId = (localId: number) => {\r\n  // ignore outdated requests\r\n  return fetchId === localId;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  StyledOuter: {\r\n    sidePanelOpen: boolean;\r\n  };\r\n}\r\n\r\nexport const StyledOuter = styled.div<Props[\"StyledOuter\"]>`\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  z-index: 1;\r\n  height: calc(100% - 50px);\r\n  margin-top: 50px;\r\n  padding: 25px;\r\n  overflow: auto;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  left: ${({ sidePanelOpen }) => (!sidePanelOpen ? \"0\" : \"360px\")};\r\n  width: ${({ sidePanelOpen }) =>\r\n    !sidePanelOpen ? \"100%\" : \"calc(100% - 360px)\"};\r\n  @media only screen and (max-width: 480px) {\r\n    padding: 5px;\r\n  }\r\n`;\r\n","import React, { forwardRef, SyntheticEvent } from \"react\";\r\nimport { useAppSelector } from \"../../../../redux/hooks\";\r\nimport { StyledOuter } from \"./OuterStyles\";\r\n\r\ninterface IProps {\r\n  children: React.ReactNode;\r\n  onScroll: (e: SyntheticEvent<HTMLDivElement>) => void;\r\n}\r\nconst OuterElement = forwardRef(({ children, onScroll }: IProps, ref) => {\r\n  const sidePanelOpen = useAppSelector(({ favourites }) => favourites.open);\r\n  return (\r\n    <StyledOuter onScroll={onScroll} sidePanelOpen={sidePanelOpen}>\r\n      {children}\r\n    </StyledOuter>\r\n  );\r\n});\r\n\r\nexport default OuterElement;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledInner = styled.div`\r\n  position: relative;\r\n`;\r\n","import { StyledInner } from \"./InnerStyles\";\r\n\r\nexport default function InnerElement(props: any) {\r\n  return <StyledInner {...props} />;\r\n}\r\n","import {\r\n  createEntityAdapter,\r\n  createSlice,\r\n  EntityId,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\nimport type { RootState } from \"./store\";\r\n\r\ninterface FavouritesState {\r\n  open: boolean;\r\n}\r\ninterface Favourite {\r\n  id: EntityId;\r\n  title: string;\r\n}\r\n\r\nconst favouritesAdapter = createEntityAdapter<Favourite>();\r\n\r\nconst initialState: FavouritesState = {\r\n  open: false,\r\n};\r\n\r\nconst favourites = createSlice({\r\n  name: \"favourites\",\r\n  initialState: favouritesAdapter.getInitialState(initialState),\r\n  reducers: {\r\n    toggleOpen(state) {\r\n      state.open = !state.open;\r\n    },\r\n    addFavourite(state, action: PayloadAction<Favourite>) {\r\n      favouritesAdapter.addOne(state, action.payload);\r\n    },\r\n    removeFavourite(state, action: PayloadAction<EntityId>) {\r\n      favouritesAdapter.removeOne(state, action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleOpen, addFavourite, removeFavourite } = favourites.actions;\r\n\r\nexport const {\r\n  selectById: selectFavouriteById,\r\n  selectIds: selectFavouriteIds,\r\n} = favouritesAdapter.getSelectors((state: RootState) => state.favourites);\r\n\r\nexport default favourites.reducer;\r\n","import styled from \"styled-components\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\n\r\ninterface Props {\r\n  CardContainer: {\r\n    left: number;\r\n    top: number;\r\n    ref: any;\r\n  };\r\n  Button: {\r\n    favourite: number;\r\n  };\r\n}\r\n\r\nexport const CardContainer = styled.div.attrs<Props[\"CardContainer\"]>(\r\n  (props) => ({\r\n    style: {\r\n      left: `${props.left}px`,\r\n      top: `${props.top}px`,\r\n    },\r\n  })\r\n)<Props[\"CardContainer\"]>`\r\n  position: absolute;\r\n  height: 300px;\r\n  width: 300px;\r\n  background: rgb(236, 240, 243);\r\n  border-radius: 25px;\r\n  margin: 25px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-shadow: 13px 13px 20px ${({ theme }) => theme.primaryShadow},\r\n    -13px -13px 20px rgb(255 255 255);\r\n  z-index: 1;\r\n  transform-style: preserve-3d;\r\n  transform: perspective(1000px);\r\n  cursor: pointer;\r\n  @media only screen and (min-width: 480px) {\r\n    margin: 25px;\r\n    &:hover {\r\n      z-index: 2;\r\n      box-shadow: 13px 13px 40px ${({ theme }) => theme.primaryShadow},\r\n        -13px -13px 40px rgb(255 255 255);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  height: 90px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  font-size: 18px;\r\n  padding: 10px;\r\n  overflow: hidden;\r\n  transform: translateZ(20px);\r\n  user-select: none;\r\n`;\r\n\r\nexport const Button = styled(StarIcon).attrs(() => ({\r\n  style: { fontSize: 36 },\r\n}))<Props[\"Button\"]>`\r\n  color: ${(props) => (props.favourite ? props.theme.primary : \"white\")};\r\n  position: absolute;\r\n  bottom: 15px;\r\n  right: 50%;\r\n  padding: 5px;\r\n  border: 1px solid #fff;\r\n  border-radius: 50%;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  cursor: pointer;\r\n  transform: translateZ(20px) translateX(50%);\r\n  @media only screen and (min-width: 480px) {\r\n    &:hover {\r\n      background-color: rgba(\r\n        1,\r\n        118,\r\n        228,\r\n        ${({ favourite }) => (favourite ? \"0.3\" : \"0.7\")}\r\n      );\r\n    }\r\n  }\r\n`;\r\n","import { useEffect, useRef } from \"react\";\r\nimport VanillaTilt from \"vanilla-tilt\";\r\n\r\nconst options = {\r\n  scale: 1.05,\r\n  speed: 1000,\r\n  glare: true,\r\n  \"max-glare\": 0.5,\r\n  max: 10,\r\n};\r\n\r\nexport const useTilt = () => {\r\n  const tilt = useRef<HTMLElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!tilt.current) return;\r\n    VanillaTilt.init(tilt.current, options);\r\n  }, []);\r\n\r\n  return tilt;\r\n};\r\n","import { createSlice, EntityId, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface DetailsState {\r\n  id: EntityId;\r\n  position: string;\r\n}\r\n\r\nconst initialState: DetailsState = {\r\n  id: -1,\r\n  position: \"\",\r\n};\r\n\r\nconst details = createSlice({\r\n  name: \"details\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    setDetailsId(state, action: PayloadAction<DetailsState>) {\r\n      state.id = action.payload.id;\r\n      state.position = action.payload.position;\r\n    },\r\n    clearDetailsId(state) {\r\n      state.id = -1;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setDetailsId, clearDetailsId } = details.actions;\r\n\r\nexport default details.reducer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  min-height: 169px;\r\n  min-width: 300px;\r\n  max-height: 169px;\r\n  max-width: 300px;\r\n  border-top-left-radius: 25px;\r\n  border-top-right-radius: 25px;\r\n`;\r\n\r\nexport const SkeletonContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  border-top-left-radius: 25px;\r\n  border-top-right-radius: 25px;\r\n  overflow: hidden;\r\n`;\r\n","import { Skeleton } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { Image, SkeletonContainer } from \"./ImageStyle\";\r\n\r\nexport default function ImageComponent({ src }: { src: string }) {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const onLoaded = () => {\r\n    setLoaded(true);\r\n  };\r\n\r\n  const path = src\r\n    ? `https://image.tmdb.org/t/p/${\"w300\"}/${src}`\r\n    : \"https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg\";\r\n\r\n  return (\r\n    <>\r\n      {!loaded && (\r\n        <SkeletonContainer>\r\n          <Skeleton variant=\"rectangular\" width={300} height={169} />\r\n        </SkeletonContainer>\r\n      )}\r\n      <Image src={path} alt=\"movie poster\" onLoad={onLoaded} />\r\n    </>\r\n  );\r\n}\r\n","import { SyntheticEvent } from \"react\";\r\nimport { EntityId } from \"@reduxjs/toolkit\";\r\nimport { selectMovieById } from \"../../../../../redux/movies\";\r\nimport {\r\n  addFavourite,\r\n  removeFavourite,\r\n  selectFavouriteById,\r\n} from \"../../../../../redux/favourites\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../../redux/hooks\";\r\nimport { Button, CardContainer, Title } from \"./CardStyle\";\r\nimport { useTilt } from \"./useTilt\";\r\nimport { setDetailsId } from \"../../../../../redux/details\";\r\nimport ImageComponent from \"./Image/Image\";\r\n\r\ninterface IProps {\r\n  movieId: EntityId;\r\n  style: { top: number; left: number };\r\n}\r\n\r\nexport default function Card({ movieId, style }: IProps) {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const movie = useAppSelector((state) => selectMovieById(state, movieId));\r\n  const favourite = useAppSelector((state) =>\r\n    selectFavouriteById(state, movieId)\r\n  );\r\n\r\n  const tiltRef = useTilt();\r\n\r\n  const onCardClick = () => {\r\n    if (!movie || !tiltRef.current) return;\r\n    const rect = tiltRef.current.getBoundingClientRect();\r\n    const midHorizontal = rect.left + rect.width / 2;\r\n    const midVertical = rect.top + rect.height / 2;\r\n\r\n    dispatch(\r\n      setDetailsId({\r\n        id: movie.id,\r\n        position: `${midHorizontal}px ${midVertical}px`,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onFavouriteClick = (e: SyntheticEvent) => {\r\n    if (!movie) return;\r\n    e.stopPropagation();\r\n    if (favourite) dispatch(removeFavourite(movieId));\r\n    else {\r\n      const payload = {\r\n        id: movie.id,\r\n        title: movie.title,\r\n      };\r\n      dispatch(addFavourite(payload));\r\n    }\r\n  };\r\n  if (!movie) return null;\r\n  return (\r\n    <CardContainer\r\n      ref={tiltRef}\r\n      top={style.top}\r\n      left={style.left}\r\n      onClick={onCardClick}\r\n    >\r\n      <ImageComponent src={movie.backdrop_path} />\r\n      <Title>{movie.title}</Title>\r\n      <Button onClick={onFavouriteClick} favourite={favourite ? 1 : 0}></Button>\r\n    </CardContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\ninterface Props {\r\n  LoadingContainer: {\r\n    left: number;\r\n    top: number;\r\n  };\r\n}\r\n\r\nexport const LoadingContainer = styled.div.attrs<Props[\"LoadingContainer\"]>(\r\n  (props) => ({\r\n    style: {\r\n      left: `${props.left}px`,\r\n      top: `${props.top}px`,\r\n    },\r\n  })\r\n)<Props[\"LoadingContainer\"]>`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 590px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport const Progress = styled(CircularProgress)`\r\n  color: #ec1d24 !important;\r\n`;\r\n","import { LoadingContainer, Progress } from \"./LoadingStyle\";\r\n\r\ninterface IProps {\r\n  style: { top: number; left: number };\r\n}\r\nexport default function Loading({ style }: IProps) {\r\n  return (\r\n    <LoadingContainer top={style.top} left={style.left}>\r\n      <Progress size={100} thickness={2} />\r\n    </LoadingContainer>\r\n  );\r\n}\r\n","import { EntityId } from \"@reduxjs/toolkit\";\r\nimport { ComponentType, memo } from \"react\";\r\nimport { areEqual, GridChildComponentProps } from \"react-window\";\r\nimport Card from \"./Card/Card\";\r\nimport Loading from \"./Loading/Loading\";\r\n\r\ninterface IProps {\r\n  data: {\r\n    items: EntityId[];\r\n    columns: number;\r\n  };\r\n  rowIndex: number;\r\n  columnIndex: number;\r\n  style: {\r\n    top: number;\r\n    left: number;\r\n  };\r\n}\r\n\r\nexport default memo(function ({ data, rowIndex, columnIndex, style }: IProps) {\r\n  const { items, columns } = data;\r\n  const movieId = items[rowIndex * columns + columnIndex];\r\n  if (!movieId) {\r\n    if (columnIndex === 0) {\r\n      return <Loading style={style} />;\r\n    }\r\n    return null;\r\n  }\r\n  return <Card key={movieId} movieId={movieId} style={style} />;\r\n}, areEqual) as ComponentType<GridChildComponentProps>;\r\n","import { FixedSizeGrid } from \"react-window\";\r\nimport InfiniteLoader from \"react-window-infinite-loader\";\r\n\r\nimport { useAppSelector } from \"../../redux/hooks\";\r\nimport { selectMovieIds } from \"../../redux/movies\";\r\nimport OuterElement from \"./Components/OuterElement/OuterElement\";\r\nimport InnerElement from \"./Components/Inner/InnerElement\";\r\nimport Row from \"./Components/Row/Row\";\r\nimport { useDimensions } from \"./Hooks/useDimensions\";\r\nimport { useResize } from \"./Hooks/useResize\";\r\nimport { useVirtualiser } from \"./Hooks/useVirtualiser\";\r\n\r\nconst ROW_HEIGHT = 350;\r\n\r\nexport default function ContentGrid() {\r\n  const movieIds = useAppSelector(selectMovieIds);\r\n\r\n  const sidePanelOpen = useAppSelector(({ favourites }) => favourites.open);\r\n  const hasNextPage = useAppSelector(({ movies }) => !movies.finished);\r\n\r\n  const resize = useResize();\r\n\r\n  const dimensions = useDimensions({\r\n    sidePanelOpen,\r\n    hasNextPage,\r\n    length: movieIds.length,\r\n    resize,\r\n  });\r\n\r\n  const { loadMoreItems, isItemLoaded, customOnItemsRendered } = useVirtualiser(\r\n    { colCount: dimensions.colCount, length: movieIds.length, hasNextPage }\r\n  );\r\n\r\n  return (\r\n    <InfiniteLoader\r\n      isItemLoaded={isItemLoaded}\r\n      itemCount={dimensions.itemCount}\r\n      loadMoreItems={loadMoreItems}\r\n      threshold={3}\r\n    >\r\n      {({ onItemsRendered, ref }) => (\r\n        <FixedSizeGrid\r\n          ref={ref}\r\n          height={dimensions.height}\r\n          width={dimensions.width}\r\n          columnCount={dimensions.colCount}\r\n          columnWidth={dimensions.colWidth}\r\n          rowCount={dimensions.rowCount}\r\n          rowHeight={ROW_HEIGHT}\r\n          onItemsRendered={customOnItemsRendered(onItemsRendered)}\r\n          outerElementType={OuterElement}\r\n          innerElementType={InnerElement}\r\n          itemData={{\r\n            items: movieIds,\r\n            columns: dimensions.colCount,\r\n          }}\r\n        >\r\n          {Row}\r\n        </FixedSizeGrid>\r\n      )}\r\n    </InfiniteLoader>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useResize = () => {\r\n  const [resize, setResize] = useState<null[]>([]);\r\n\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      setResize([]);\r\n    };\r\n    onResize();\r\n    window.addEventListener(\"resize\", onResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  }, []);\r\n\r\n  return resize;\r\n};\r\n","import { useMemo } from \"react\";\r\n\r\ninterface IProps {\r\n  sidePanelOpen: boolean;\r\n  hasNextPage: boolean;\r\n  length: number;\r\n  resize: any[];\r\n}\r\ninterface Dimensions {\r\n  itemCount: number;\r\n  width: number;\r\n  height: number;\r\n  colCount: number;\r\n  colWidth: number;\r\n  rowCount: number;\r\n}\r\nexport const useDimensions = ({\r\n  sidePanelOpen,\r\n  hasNextPage,\r\n  length,\r\n  resize,\r\n}: IProps) => {\r\n  const dimensions = useMemo((): Dimensions => {\r\n    const colWidth = window.innerWidth > 480 ? 350 : 300;\r\n    const xPadding = window.innerWidth > 480 ? 50 : 10;\r\n    const yPadding = 50;\r\n    const yMargin = 50;\r\n\r\n    const sidePanelAdj = sidePanelOpen ? -350 : 0;\r\n    const width = window.innerWidth - xPadding + sidePanelAdj;\r\n    const height = window.innerHeight - yPadding - yMargin;\r\n    const colCount = Math.max(Math.floor(width / colWidth), 1);\r\n\r\n    const itemCount = hasNextPage ? length + colCount : length;\r\n\r\n    const rowCount = Math.ceil(itemCount / colCount);\r\n    return { itemCount, width, height, colCount, colWidth, rowCount };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [sidePanelOpen, hasNextPage, length, resize]);\r\n\r\n  return dimensions;\r\n};\r\n","import { useCallback } from \"react\";\r\nimport { fetchMovies } from \"../../../redux/movies\";\r\nimport { useAppDispatch } from \"../../../redux/hooks\";\r\n\r\ninterface IProps {\r\n  colCount: any;\r\n  length: number;\r\n  hasNextPage: boolean;\r\n}\r\ninterface renderProps {\r\n  visibleColumnStartIndex: number;\r\n  visibleColumnStopIndex: number;\r\n  visibleRowStartIndex: number;\r\n  visibleRowStopIndex: number;\r\n}\r\nexport const useVirtualiser = ({ colCount, length, hasNextPage }: IProps) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const loadMoreItems = useCallback(() => {\r\n    dispatch(fetchMovies());\r\n  }, [dispatch]);\r\n\r\n  const isItemLoaded = useCallback(\r\n    (index) => !hasNextPage || index < length,\r\n    [hasNextPage, length]\r\n  );\r\n  const customOnItemsRendered = useCallback(\r\n    (infiniteOnItemsRendered) =>\r\n      ({\r\n        visibleColumnStartIndex,\r\n        visibleColumnStopIndex,\r\n        visibleRowStartIndex,\r\n        visibleRowStopIndex,\r\n      }: renderProps) => {\r\n        const visibleStartIndex =\r\n          visibleRowStartIndex * colCount + visibleColumnStartIndex;\r\n        const visibleStopIndex =\r\n          visibleRowStopIndex * colCount + visibleColumnStopIndex;\r\n        infiniteOnItemsRendered({\r\n          visibleStartIndex,\r\n          visibleStopIndex,\r\n        });\r\n      },\r\n    [colCount]\r\n  );\r\n\r\n  return { loadMoreItems, isItemLoaded, customOnItemsRendered };\r\n};\r\n","import styled from \"styled-components\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nexport const Button = styled(CloseIcon).attrs(() => ({\r\n  fontSize: \"large\",\r\n}))`\r\n  cursor: pointer;\r\n  color: white;\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 20px;\r\n`;\r\n","import { clearDetailsId } from \"../../../../../../redux/details\";\r\nimport { useAppDispatch } from \"../../../../../../redux/hooks\";\r\nimport { Button } from \"./CloseButtonStyle\";\r\n\r\nexport default function CloseButton() {\r\n  const dispatch = useAppDispatch();\r\n  const onClose = () => {\r\n    dispatch(clearDetailsId());\r\n  };\r\n  return <Button onClick={onClose} />;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  DetailsContainer: {\r\n    dimensions: { height: number; width: number };\r\n  };\r\n}\r\n\r\nexport const DetailsContainer = styled.div<Props[\"DetailsContainer\"]>`\r\n  position: relative;\r\n  height: ${({ dimensions }) => dimensions.height}px;\r\n  width: ${({ dimensions }) => dimensions.width}px;\r\n  display: flex;\r\n  background-color: transparent;\r\n  align-items: center;\r\n  @media only screen and (max-width: 700px) {\r\n    overflow: auto;\r\n    flex-direction: column;\r\n    height: calc(100vh - 15px);\r\n    width: calc(100vw - 15px);\r\n    padding-top: 25px;\r\n  }\r\n`;\r\n\r\nexport const RightContainer = styled.div`\r\n  height: 100%;\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 25px 50px;\r\n  overflow: auto;\r\n  @media only screen and (max-width: 700px) {\r\n    overflow: unset;\r\n    width: 100%;\r\n    padding: 25px;\r\n  }\r\n`;\r\nexport const Title = styled.div`\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  color: white;\r\n`;\r\nexport const Heading = styled.div`\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  margin-top: 1rem;\r\n  margin-bottom: 0.5rem;\r\n  color: white;\r\n`;\r\nexport const Content = styled.div`\r\n  color: white;\r\n`;\r\n\r\nexport const TagContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const StyledTag = styled.div`\r\n  background-color: steelblue;\r\n  border-radius: 10px;\r\n  margin: 5px;\r\n  padding: 5px 10px;\r\n  color: white;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const RatingContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const RatingValue = styled.div`\r\n  color: white;\r\n  margin-left: 12px;\r\n  font-size: 0.8rem;\r\n`;\r\n","import { useState } from \"react\";\r\nimport { Rating } from \"@mui/material\";\r\nimport { Heading } from \"../../DetailsStyle\";\r\nimport { RatingContainer, RatingValue } from \"./RatingStyle\";\r\n\r\ninterface IProps {\r\n  rating: number;\r\n}\r\nexport default function RatingComponent({ rating }: IProps) {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const onMouseEnter = () => setHover(true);\r\n  const onMouseExit = () => setHover(false);\r\n\r\n  return (\r\n    <>\r\n      <Heading>Rating</Heading>\r\n      <RatingContainer\r\n        onPointerEnter={onMouseEnter}\r\n        onPointerLeave={onMouseExit}\r\n      >\r\n        <Rating name=\"read-only\" value={rating} readOnly precision={0.2} />\r\n        {hover && <RatingValue>{rating} / 5</RatingValue>}\r\n      </RatingContainer>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  createSlice,\r\n  createEntityAdapter,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\nimport { MovieApi } from \"../Api/MovieApi\";\r\nimport type { AppThunk, RootState } from \"./store\";\r\n\r\nexport interface Genre {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nconst genresAdapter = createEntityAdapter<Genre>();\r\n\r\nconst genres = createSlice({\r\n  name: \"genres\",\r\n  initialState: genresAdapter.getInitialState(),\r\n  reducers: {\r\n    addGenres(state, action: PayloadAction<Genre[]>) {\r\n      genresAdapter.addMany(state, action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addGenres } = genres.actions;\r\n\r\nexport const { selectById: selectGenreById } = genresAdapter.getSelectors(\r\n  (state: RootState) => state.genres\r\n);\r\n\r\nexport default genres.reducer;\r\n\r\nexport const fetchGenres = (): AppThunk => async (dispatch) => {\r\n  const { body, error } = await MovieApi.fetchGenreList();\r\n  if (error) return;\r\n  const genres = body.genres;\r\n\r\n  if (genres) dispatch(addGenres(genres));\r\n};\r\n","import { selectGenreById } from \"../../../../../../../redux/genres\";\r\nimport { useAppSelector } from \"../../../../../../../redux/hooks\";\r\nimport { StyledTag } from \"../../../DetailsStyle\";\r\n\r\ninterface IProps {\r\n  genreId: number;\r\n}\r\n\r\nexport default function GenreTag({ genreId }: IProps) {\r\n  const genre = useAppSelector((state) => selectGenreById(state, genreId));\r\n  if (!genre) return null;\r\n  return <StyledTag>{genre.name}</StyledTag>;\r\n}\r\n","import { Heading, TagContainer } from \"../../DetailsStyle\";\r\nimport GenreTag from \"./GenreTag/GenreTag\";\r\n\r\ninterface Iprops {\r\n  genres: number[];\r\n}\r\n\r\nexport default function Genres({ genres }: Iprops) {\r\n  return (\r\n    <>\r\n      <Heading>Genres</Heading>\r\n      <TagContainer>\r\n        {genres.map((genreId) => (\r\n          <GenreTag key={genreId} genreId={genreId} />\r\n        ))}\r\n      </TagContainer>\r\n    </>\r\n  );\r\n}\r\n","import { StyledTag } from \"../../../DetailsStyle\";\r\n\r\ninterface IProps {\r\n  person: string;\r\n}\r\n\r\nexport default function CastTag({ person }: IProps) {\r\n  if (!person) return null;\r\n  return <StyledTag>{person}</StyledTag>;\r\n}\r\n","import { EntityId } from \"@reduxjs/toolkit\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { MovieApi } from \"../../../../../../Api/MovieApi\";\r\n\r\ninterface IProps {\r\n  movieId: EntityId;\r\n}\r\nexport const useCast = ({ movieId }: IProps) => {\r\n  const [cast, setCast] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await MovieApi.fetchCast(movieId);\r\n      if (!result?.body?.cast) return;\r\n      const cast = result.body.cast\r\n        .slice(0, 9)\r\n        .map((p: { name: string }) => p.name);\r\n      setCast(cast);\r\n    })();\r\n  }, [movieId]);\r\n  return cast;\r\n};\r\n","import { EntityId } from \"@reduxjs/toolkit\";\r\nimport { Heading, TagContainer } from \"../../DetailsStyle\";\r\nimport CastTag from \"./CastTag/CastTag\";\r\nimport { useCast } from \"./useCast\";\r\n\r\ninterface IProps {\r\n  movieId: EntityId;\r\n}\r\nexport default function Cast({ movieId }: IProps) {\r\n  const cast = useCast({ movieId });\r\n  return (\r\n    <>\r\n      <Heading>Cast</Heading>\r\n      <TagContainer>\r\n        {cast.map((person) => (\r\n          <CastTag key={person} person={person} />\r\n        ))}\r\n      </TagContainer>\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  width: 50%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const SkeletonContainer = styled.div`\r\n  position: absolute;\r\n  z-index: 0;\r\n  top: 0;\r\n  left: 0;\r\n  width: 50%;\r\n  height: 100%;\r\n`;\r\n","import { Skeleton } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { Image, SkeletonContainer } from \"./ImageStyle\";\r\n\r\nexport default function ImageComponent({ src }: { src: string }) {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const onLoaded = () => {\r\n    setLoaded(true);\r\n  };\r\n\r\n  const path = src\r\n    ? `https://image.tmdb.org/t/p/${\"w780\"}/${src}`\r\n    : \"https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg\";\r\n\r\n  return (\r\n    <>\r\n      {!loaded && (\r\n        <SkeletonContainer>\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            sx={{ bgcolor: \"grey.900\" }}\r\n          />\r\n        </SkeletonContainer>\r\n      )}\r\n      <Image src={path} alt=\"movie poster\" onLoad={onLoaded} />\r\n    </>\r\n  );\r\n}\r\n","import { EntityId } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\nimport { selectMovieById } from \"../../../../redux/movies\";\r\nimport { useAppSelector } from \"../../../../redux/hooks\";\r\nimport CloseButton from \"./Components/CloseButton/CloseButton\";\r\nimport {\r\n  DetailsContainer,\r\n  Heading,\r\n  Content,\r\n  RightContainer,\r\n  Title,\r\n} from \"./DetailsStyle\";\r\nimport RatingComponent from \"./Components/Rating/Rating\";\r\nimport Genres from \"./Components/Genres/Genres\";\r\nimport { useDimensions } from \"./hooks/useDimensions\";\r\nimport Cast from \"./Components/Cast/Cast\";\r\nimport ImageComponent from \"./Components/Image/Image\";\r\n\r\ninterface IProps {\r\n  movieId: EntityId;\r\n}\r\nexport default function Details({ movieId }: IProps) {\r\n  const movie = useAppSelector((state) => selectMovieById(state, movieId));\r\n\r\n  const dimensions = useDimensions();\r\n\r\n  return (\r\n    <DetailsContainer dimensions={dimensions}>\r\n      {movie && (\r\n        <>\r\n          <ImageComponent src={movie.poster_path} />\r\n\r\n          <RightContainer>\r\n            <Title>{movie.title}</Title>\r\n            <Heading>Released</Heading>\r\n            <Content>\r\n              {moment(movie.release_date).format(\"MMMM Do YYYY\")}\r\n            </Content>\r\n            <Heading>Summary</Heading>\r\n            <Content>{movie.overview}</Content>\r\n\r\n            <RatingComponent rating={movie.vote_average / 2} />\r\n            <Cast movieId={movieId} />\r\n            <Genres genres={movie.genre_ids} />\r\n          </RightContainer>\r\n        </>\r\n      )}\r\n\r\n      <CloseButton />\r\n    </DetailsContainer>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDimensions = () => {\r\n  const [dimensions, setDimensions] = useState({ height: 0, width: 0 });\r\n\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      const maxHeight = window.innerHeight - 50;\r\n      const maxWidth = window.innerWidth - 50;\r\n      const ratio = maxWidth / maxHeight;\r\n      if (ratio < 1.34) {\r\n        setDimensions({ height: (maxWidth * 3) / 4, width: maxWidth });\r\n      } else {\r\n        setDimensions({ height: maxHeight, width: (maxHeight * 4) / 3 });\r\n      }\r\n    };\r\n    onResize();\r\n    window.addEventListener(\"resize\", onResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  }, []);\r\n\r\n  return dimensions;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const PaperContainer = styled.div`\r\n  border-radius: 15px;\r\n  margin: 0;\r\n  background: linear-gradient(\r\n    to right bottom,\r\n    rgba(0, 10, 30, 0.8),\r\n    rgba(0, 10, 30, 0.6)\r\n  );\r\n  backdrop-filter: blur(1rem);\r\n  background-color: transparent;\r\n  box-shadow: 0px 5px 15px -2px rgba(0, 0, 0, 0.2);\r\n  overflow: hidden;\r\n`;\r\n","import { PaperProps } from \"@mui/material\";\r\nimport { JSXElementConstructor } from \"react\";\r\nimport { PaperContainer } from \"./PaperComponentStyle\";\r\n\r\nexport default (function PaperComponent({ children }) {\r\n  return <PaperContainer>{children}</PaperContainer>;\r\n} as JSXElementConstructor<PaperProps<\"div\", {}>>);\r\n","import { forwardRef, JSXElementConstructor, ReactElement } from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Zoom from \"@mui/material/Zoom\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\r\nimport { clearDetailsId } from \"../../redux/details\";\r\nimport { TransitionProps } from \"@mui/material/transitions\";\r\nimport Details from \"./Components/Details/Details\";\r\nimport PaperComponent from \"./Components/Paper/PaperComponent\";\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  const detailsOrigin = useAppSelector(({ details }) => details.position);\r\n  return (\r\n    <Zoom\r\n      ref={ref}\r\n      {...props}\r\n      style={{ transformOrigin: detailsOrigin }}\r\n      timeout={500}\r\n    />\r\n  );\r\n}) as JSXElementConstructor<\r\n  TransitionProps & { children: ReactElement<any, any> }\r\n>;\r\n\r\nexport default function DetailsDialog() {\r\n  const dispatch = useAppDispatch();\r\n  const movieId = useAppSelector(({ details }) => details.id);\r\n\r\n  const onClose = () => {\r\n    dispatch(clearDetailsId());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={movieId > 0}\r\n      TransitionComponent={Transition}\r\n      onClose={onClose}\r\n      maxWidth={false}\r\n      PaperComponent={PaperComponent}\r\n    >\r\n      <Details movieId={movieId} />\r\n    </Dialog>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  ErrorContainer: {\r\n    sidePanelOpen: boolean;\r\n  };\r\n}\r\n\r\nexport const ErrorContainer = styled.div<Props[\"ErrorContainer\"]>`\r\n  position: absolute;\r\n  z-index: 1;\r\n  height: calc(100% - 50px);\r\n  margin-top: 50px;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: red;\r\n  left: ${({ sidePanelOpen }) => (!sidePanelOpen ? \"0\" : \"360px\")};\r\n  width: ${({ sidePanelOpen }) =>\r\n    !sidePanelOpen ? \"100%\" : \"calc(100% - 360px)\"};\r\n`;\r\n","import { useAppSelector } from \"../../redux/hooks\";\r\nimport { ErrorContainer } from \"./ErrorStyle\";\r\n\r\nexport default function Error() {\r\n  const sidePanelOpen = useAppSelector(({ favourites }) => favourites.open);\r\n  return (\r\n    <ErrorContainer sidePanelOpen={sidePanelOpen}>\r\n      Oops, something went wrong 🤨\r\n    </ErrorContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\ninterface Props {\r\n  Title: {\r\n    ref: any;\r\n  };\r\n}\r\n\r\nexport const FavouriteContainer = styled.li`\r\n  padding: 15px 50px 15px 15px;\r\n  border-bottom: 1px solid rgb(204, 204, 204);\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.div<Props[\"Title\"]>`\r\n  height: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  font-size: 18px;\r\n  padding: 10px;\r\n  overflow: hidden;\r\n  user-select: none;\r\n`;\r\n\r\nexport const RemoveButton = styled(CloseIcon).attrs(() => ({\r\n  fontSize: \"large\",\r\n}))`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 20px;\r\n  transform: translateY(-50%);\r\n`;\r\n","import { useRef } from \"react\";\r\nimport { EntityId } from \"@reduxjs/toolkit\";\r\nimport {\r\n  removeFavourite,\r\n  selectFavouriteById,\r\n} from \"../../../../../redux/favourites\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../../redux/hooks\";\r\nimport { FavouriteContainer, RemoveButton, Title } from \"./FavouriteStyle\";\r\nimport { setDetailsId } from \"../../../../../redux/details\";\r\n\r\ninterface IProps {\r\n  favouriteId: EntityId;\r\n}\r\n\r\nexport default function Favourite({ favouriteId }: IProps) {\r\n  const titleRef = useRef<HTMLElement>(null);\r\n  const dispatch = useAppDispatch();\r\n  const favourite = useAppSelector((state) =>\r\n    selectFavouriteById(state, favouriteId)\r\n  );\r\n  const onRemove = () => {\r\n    dispatch(removeFavourite(favouriteId));\r\n  };\r\n\r\n  const onTitleClick = () => {\r\n    if (!favouriteId || !titleRef.current) return;\r\n    const rect = titleRef.current.getBoundingClientRect();\r\n    const midHorizontal = rect.left + rect.width / 2;\r\n    const midVertical = rect.top + rect.height / 2;\r\n\r\n    dispatch(\r\n      setDetailsId({\r\n        id: favouriteId,\r\n        position: `${midHorizontal}px ${midVertical}px`,\r\n      })\r\n    );\r\n  };\r\n  if (!favourite) return null;\r\n\r\n  return (\r\n    <FavouriteContainer>\r\n      <Title onClick={onTitleClick} ref={titleRef}>\r\n        {favourite.title}\r\n      </Title>\r\n      <RemoveButton onClick={onRemove} />\r\n    </FavouriteContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContentContainer = styled.div``;\r\nexport const FavouritesList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: outside none;\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectFavouriteIds } from \"../../../../redux/favourites\";\r\nimport Favourite from \"./Components/Favourite\";\r\nimport { ContentContainer, FavouritesList } from \"./FavouritesContentStyle\";\r\n\r\nexport default function FavouritesContent() {\r\n  const favouriteIds = useSelector(selectFavouriteIds);\r\n\r\n  return (\r\n    <ContentContainer>\r\n      <FavouritesList>\r\n        {favouriteIds.map((favouriteId) => (\r\n          <Favourite key={favouriteId} favouriteId={favouriteId} />\r\n        ))}\r\n      </FavouritesList>\r\n    </ContentContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderContainer = styled.div`\r\n  height: 64px;\r\n  text-align: center;\r\n  line-height: 64px;\r\n  border-bottom: 1px solid rgb(204, 204, 204);\r\n  border-top: 1px solid rgb(204, 204, 204);\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  color: ${({ theme }) => theme.primary};\r\n  font-weight: 700;\r\n`;\r\n","import { HeaderContainer, Title } from \"./FavouritesHeaderStyle\";\r\n\r\nexport default function FavouritesHeader() {\r\n  return (\r\n    <HeaderContainer>\r\n      <Title>Favourites</Title>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  f: {\r\n    open: boolean;\r\n  };\r\n}\r\n\r\nexport const FavouritesPanelContainer = styled.div<Props[\"f\"]>`\r\n  position: fixed;\r\n  z-index: 4;\r\n  top: 64px;\r\n  left: 0;\r\n  width: 360px;\r\n  transform: translateX(${({ open }) => (open ? 0 : \"-100%\")});\r\n  height: calc(100% - 64px);\r\n  background: #ecf0f3;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  max-width: 100vw;\r\n  -webkit-transition: all 0.25s ease-in-out;\r\n  transition: all 0.25s ease-in-out;\r\n  border-right: 1px solid rgb(204, 204, 204);\r\n  box-shadow: 13px 0px 20px ${({ theme }) => theme.primaryShadow};\r\n`;\r\n","import { useAppSelector } from \"../../redux/hooks\";\r\nimport FavouritesContent from \"./Components/FavouritesContent/FavouriteContent\";\r\nimport FavouritesHeader from \"./Components/FavouritesHeader/FavouritesHeader\";\r\nimport { FavouritesPanelContainer } from \"./FavouritesPanelStyle\";\r\n\r\nexport default function FavouritesPanel() {\r\n  const open = useAppSelector(({ favourites }) => favourites.open);\r\n\r\n  return (\r\n    <FavouritesPanelContainer open={open}>\r\n      <FavouritesHeader />\r\n      <FavouritesContent />\r\n    </FavouritesPanelContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\n\r\ninterface Props {\r\n  button: {\r\n    open: boolean;\r\n  };\r\n}\r\n\r\nexport const HeaderContainer = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100vw;\r\n  box-shadow: 0px 13px 20px ${({ theme }) => theme.primaryShadow};\r\n  height: 64px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 3;\r\n  background-color: #ecf0f3;\r\n`;\r\n\r\nexport const FavButtonContainer = styled.div`\r\n  position: absolute;\r\n  left: 32px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  box-shadow: 8px 8px 8px ${({ theme }) => theme.topShadow},\r\n    -8px -8px 8px ${({ theme }) => theme.bottomShadow};\r\n  -webkit-tap-highlight-color: transparent;\r\n  @media (max-width: 500px) {\r\n    left: 4px;\r\n  }\r\n`;\r\n\r\nexport const FavButton = styled(StarIcon).attrs(() => ({\r\n  style: { fontSize: 45 },\r\n}))<Props[\"button\"]>`\r\n  color: ${({ theme }) => theme.primary};\r\n  padding: 10px;\r\n  transform: rotate(${({ open }) => (open ? 360 : 0)}deg);\r\n  transition: all 0.75s !important;\r\n`;\r\n","import { Popover } from \"@mui/material\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  SelectContainer: {\r\n    ref: any;\r\n  };\r\n}\r\n\r\nexport const SelectContainer = styled.div<IProps[\"SelectContainer\"]>`\r\n  position: absolute;\r\n  right: 32px;\r\n  width: 140px;\r\n  height: 40px;\r\n  border-radius: 15px;\r\n  box-shadow: 8px 8px 8px ${({ theme }) => theme.topShadow},\r\n    -8px -8px 8px ${({ theme }) => theme.bottomShadow};\r\n  cursor: pointer;\r\n  -webkit-tap-highlight-color: transparent;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding: 16px;\r\n  color: ${({ theme }) => theme.primary};\r\n  font-weight: 600;\r\n  @media (max-width: 500px) {\r\n    right: 12px;\r\n    width: 100px;\r\n    font-size: 0.75rem;\r\n    padding: 8px;\r\n  }\r\n`;\r\n\r\nexport const PopoverContents = styled.div`\r\n  width: 140px;\r\n  background-color: rgb(236, 240, 243);\r\n  @media (max-width: 500px) {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nexport const StyledPopover = styled(Popover).attrs((props) => ({\r\n  PaperProps: {\r\n    style: {\r\n      boxShadow: `8px 8px 8px ${props.theme.topShadow}`,\r\n    },\r\n  },\r\n}))``;\r\n\r\nexport const MenuItem = styled.div`\r\n  color: ${({ theme }) => theme.primary};\r\n  padding: 10px 20px;\r\n  user-select: none;\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  font-weight: 600;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.primaryShadow};\r\n  }\r\n`;\r\n\r\nexport const StyledDownArrow = styled(ArrowDropDownIcon)`\r\n  position: absolute;\r\n  right: 5px;\r\n  @media (max-width: 500px) {\r\n    right: 0;\r\n  }\r\n`;\r\nexport const StyledUpArrow = styled(ArrowDropUpIcon)`\r\n  position: absolute;\r\n  right: 5px;\r\n  @media (max-width: 500px) {\r\n    right: 0;\r\n  }\r\n`;\r\n","import { useRef, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../redux/hooks\";\r\nimport { Mode, selectNewMode } from \"../../../redux/movies\";\r\nimport {\r\n  MenuItem,\r\n  PopoverContents,\r\n  SelectContainer,\r\n  StyledDownArrow,\r\n  StyledPopover,\r\n  StyledUpArrow,\r\n} from \"./ModeSelectStyle\";\r\n\r\nexport default function ModeSelect({\r\n  searchActive,\r\n}: {\r\n  searchActive: boolean;\r\n}) {\r\n  const dispatch = useAppDispatch();\r\n  const mode = useAppSelector(({ movies }) => movies.mode);\r\n  const [open, setOpen] = useState(false);\r\n  const anchor = useRef<HTMLElement>(null);\r\n\r\n  const onClick = (e: any) => {\r\n    const newMode: number = +Mode[e.target.innerHTML];\r\n    dispatch(selectNewMode(newMode));\r\n    setOpen(false);\r\n  };\r\n  if (searchActive || mode === Mode.Search) return null;\r\n  return (\r\n    <>\r\n      <SelectContainer onClick={() => setOpen(true)} ref={anchor}>\r\n        {Mode[mode]}\r\n        {open ? <StyledUpArrow /> : <StyledDownArrow />}\r\n      </SelectContainer>\r\n      <StyledPopover\r\n        open={open}\r\n        anchorEl={anchor.current}\r\n        onClose={() => setOpen(false)}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <PopoverContents>\r\n          <MenuItem onClick={onClick}>Popular</MenuItem>\r\n          <MenuItem onClick={onClick}>Now Playing</MenuItem>\r\n          <MenuItem onClick={onClick}>Top Rated</MenuItem>\r\n          <MenuItem onClick={onClick}>Upcoming</MenuItem>\r\n        </PopoverContents>\r\n      </StyledPopover>\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\n\r\nexport const SearchBarContainer = styled.div`\r\n  width: 650px;\r\n  height: 50px;\r\n  position: relative;\r\n  transition: all 400ms cubic-bezier(0.075, 0.82, 0.165, 1);\r\n  @media (max-width: 1025px) {\r\n    margin-left: 100px;\r\n    margin-right: 195px;\r\n  }\r\n  @media (max-width: 500px) {\r\n    margin-left: 60px;\r\n    margin-right: ${({ active }) => (active ? 10 : 125)}px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  position: relative;\r\n  z-index: 2;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 25px;\r\n  border: none;\r\n  outline: none;\r\n  padding: 10px 50px 5px 70px;\r\n  background-color: transparent;\r\n  color: ${({ theme }) => theme.primary};\r\n  box-shadow: inset 8px 8px 8px ${({ theme }) => theme.topShadow},\r\n    inset -8px -8px 8px ${({ theme }) => theme.bottomShadow};\r\n  font-weight: 700;\r\n  font-size: 1rem;\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n  @media (max-width: 500px) {\r\n    padding: 10px 50px 5px 16px;\r\n    ::placeholder {\r\n      color: ${(props) => (props.active ? props.theme.primary : \"transparent\")};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledSearchIcon = styled(SearchIcon)`\r\n  color: ${({ theme }) => theme.primary};\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 10px;\r\n  z-index: 1;\r\n`;\r\nexport const StyledCancelIcon = styled(ClearIcon)`\r\n  color: ${({ theme }) => theme.primary};\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 10px;\r\n  cursor: pointer;\r\n  z-index: 3;\r\n`;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { debounce } from \"lodash\";\r\nimport {\r\n  Input,\r\n  SearchBarContainer,\r\n  StyledSearchIcon,\r\n  StyledCancelIcon,\r\n} from \"./SearchStyle\";\r\nimport { useAppDispatch } from \"../../../redux/hooks\";\r\nimport { Mode, selectNewMode } from \"../../../redux/movies\";\r\n\r\nexport default function Search({ searchActive, setSearchActive }) {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const onCloseSearch = () => {\r\n    setSearchText(\"\");\r\n    dispatch(selectNewMode(Mode.Popular));\r\n  };\r\n\r\n  const requestSearch = useMemo(\r\n    () =>\r\n      debounce(async (query) => {\r\n        if (!query) return;\r\n        dispatch(selectNewMode(Mode.Search, query));\r\n      }, 300),\r\n    [dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      requestSearch.cancel();\r\n    };\r\n  }, [requestSearch]);\r\n\r\n  const onSearchTextChange = useCallback(\r\n    (e) => {\r\n      requestSearch(e.target.value);\r\n      setSearchText(e.target.value);\r\n      if (!e.target.value) {\r\n        dispatch(selectNewMode(Mode.Popular));\r\n      }\r\n    },\r\n    [requestSearch, dispatch]\r\n  );\r\n\r\n  const onFocus = () => {\r\n    if (window.innerWidth > 500) return;\r\n    setSearchActive(true);\r\n  };\r\n\r\n  const onBlur = () => {\r\n    setSearchActive(false);\r\n  };\r\n\r\n  const expanded = useMemo(() => {\r\n    if (window.innerWidth > 500) return false;\r\n    if (searchText || searchActive) return true;\r\n    return false;\r\n  }, [searchActive, searchText]);\r\n\r\n  return (\r\n    <SearchBarContainer active={expanded}>\r\n      {!expanded && <StyledSearchIcon fontSize=\"large\" />}\r\n      {(expanded || searchText) && (\r\n        <StyledCancelIcon onClick={onCloseSearch} fontSize=\"large\" />\r\n      )}\r\n      <Input\r\n        type=\"text\"\r\n        id=\"search\"\r\n        placeholder=\"Search for movies...\"\r\n        value={searchText}\r\n        onChange={onSearchTextChange}\r\n        autoComplete=\"off\"\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        active={expanded}\r\n      />\r\n    </SearchBarContainer>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { toggleOpen } from \"../../redux/favourites\";\r\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\r\nimport { FavButton, FavButtonContainer, HeaderContainer } from \"./HeaderStyle\";\r\nimport ModeSelect from \"./ModeSelect/ModeSelect\";\r\nimport Search from \"./Search/Search\";\r\n\r\nexport default function Header() {\r\n  const dispatch = useAppDispatch();\r\n  const open = useAppSelector(({ favourites }) => favourites.open);\r\n  const [searchActive, setSearchActive] = useState(false);\r\n\r\n  const onClick = () => {\r\n    dispatch(toggleOpen());\r\n  };\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <FavButtonContainer onClick={onClick}>\r\n        <FavButton open={open} />\r\n      </FavButtonContainer>\r\n      <Search searchActive={searchActive} setSearchActive={setSearchActive} />\r\n      <ModeSelect searchActive={searchActive} />\r\n    </HeaderContainer>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { fetchGenres } from \"../redux/genres\";\r\nimport { useAppDispatch } from \"../redux/hooks\";\r\n\r\nexport const useGenres = () => {\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchGenres());\r\n  }, [dispatch]);\r\n};\r\n","import \"./App.css\";\nimport ContentGrid from \"./Components/Content/ContentGrid\";\nimport DetailsDialog from \"./Components/DetailsDialog/DetailsDialog\";\nimport Error from \"./Components/Error/Error\";\nimport FavouritesPanel from \"./Components/Favourites Panel/FavouritesPanel\";\nimport Header from \"./Components/Header/Header\";\nimport { useGenres } from \"./hooks/useGenres\";\nimport { useAppSelector } from \"./redux/hooks\";\n\nexport default function App() {\n  const error = useAppSelector(({ movies }) => movies.error);\n  useGenres();\n  return (\n    <>\n      <Header />\n      {!error ? <ContentGrid /> : <Error />}\n      <FavouritesPanel />\n      <DetailsDialog />\n    </>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { AnyAction } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nimport movies from \"./movies\";\r\nimport details from \"./details\";\r\nimport favourites from \"./favourites\";\r\nimport genres from \"./genres\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    movies,\r\n    details,\r\n    favourites,\r\n    genres,\r\n  },\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  AnyAction\r\n>;\r\n","const theme = {\r\n  primary: \"rgb(1, 118, 228)\",\r\n  primaryShadow: \"rgb(204, 225, 253)\",\r\n  topShadow: \"rgb(204, 225, 253)\",\r\n  bottomShadow: \"#fff\",\r\n};\r\nexport default theme;\r\n","import \"./index.css\";\nimport \"./normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport theme from \"./Styles/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}